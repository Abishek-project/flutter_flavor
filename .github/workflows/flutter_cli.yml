name: Flutter CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4 

      - name: Set Up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle'
          java-version: '17'   

      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'    

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Check for formatting issues
        run: dart format --set-exit-if-changed .

      - name: Statically analyze Dart code
        run: flutter analyze .

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles          

      - name: Build Flutter app for iOS
        run: flutter build ios --release --target lib/main_car.dart

      - name: Create IPA
        run: xcodebuild -workspace ios/Runner.xcworkspace -scheme Runner -sdk iphoneos -configuration Release -archivePath build/ios/Runner.xcarchive archive -quiet
         ls -R build/ios/Runner.xcarchive  
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ipa
          path: ./**.ipa
      # - name: Install App Center CLI
      #   run: npm install -g appcenter-cli
        
      # - name: Distribute apk to App Center
      #   uses: akiojin/appcenter-distribute-github-action@v1
      #   with:
      #    token: ${{ secrets.APPCENTER_ACCESS_TOKEN }}
      #    path: build/app/outputs/flutter-apk/app-release.apk
      #    app: abishekabi/Flutter
      #    mandatory: true
      #    silent: false
      #    group: 'Tests'
      #    release_notes: "Test release"
          
          




  
